// Generated by view binder compiler. Do not edit!
package ddwu.com.mobile.anylearn2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ddwu.com.mobile.anylearn2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccountSettingPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText AccountSettingPageEmail;

  @NonNull
  public final EditText AccountSettingPageNickname;

  @NonNull
  public final Button AccountSettingPageNicknameCheckButton;

  @NonNull
  public final EditText AccountSettingPagePW;

  @NonNull
  public final EditText AccountSettingPagePWCheck;

  @NonNull
  public final TextView AccountSettingPageTitle;

  @NonNull
  public final Button AccountSettingPageUndo;

  @NonNull
  public final Button accountSettingPageLogout;

  @NonNull
  public final Button accountSettingPageRmove;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final ConstraintLayout constraintLayout4;

  @NonNull
  public final ConstraintLayout constraintLayout5;

  @NonNull
  public final ConstraintLayout constraintLayout6;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final View view;

  private ActivityAccountSettingPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText AccountSettingPageEmail, @NonNull EditText AccountSettingPageNickname,
      @NonNull Button AccountSettingPageNicknameCheckButton, @NonNull EditText AccountSettingPagePW,
      @NonNull EditText AccountSettingPagePWCheck, @NonNull TextView AccountSettingPageTitle,
      @NonNull Button AccountSettingPageUndo, @NonNull Button accountSettingPageLogout,
      @NonNull Button accountSettingPageRmove, @NonNull ConstraintLayout constraintLayout2,
      @NonNull ConstraintLayout constraintLayout3, @NonNull ConstraintLayout constraintLayout4,
      @NonNull ConstraintLayout constraintLayout5, @NonNull ConstraintLayout constraintLayout6,
      @NonNull ImageView imageView, @NonNull RelativeLayout relativeLayout, @NonNull View view) {
    this.rootView = rootView;
    this.AccountSettingPageEmail = AccountSettingPageEmail;
    this.AccountSettingPageNickname = AccountSettingPageNickname;
    this.AccountSettingPageNicknameCheckButton = AccountSettingPageNicknameCheckButton;
    this.AccountSettingPagePW = AccountSettingPagePW;
    this.AccountSettingPagePWCheck = AccountSettingPagePWCheck;
    this.AccountSettingPageTitle = AccountSettingPageTitle;
    this.AccountSettingPageUndo = AccountSettingPageUndo;
    this.accountSettingPageLogout = accountSettingPageLogout;
    this.accountSettingPageRmove = accountSettingPageRmove;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout3 = constraintLayout3;
    this.constraintLayout4 = constraintLayout4;
    this.constraintLayout5 = constraintLayout5;
    this.constraintLayout6 = constraintLayout6;
    this.imageView = imageView;
    this.relativeLayout = relativeLayout;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccountSettingPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccountSettingPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_account_setting_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccountSettingPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AccountSettingPageEmail;
      EditText AccountSettingPageEmail = ViewBindings.findChildViewById(rootView, id);
      if (AccountSettingPageEmail == null) {
        break missingId;
      }

      id = R.id.AccountSettingPageNickname;
      EditText AccountSettingPageNickname = ViewBindings.findChildViewById(rootView, id);
      if (AccountSettingPageNickname == null) {
        break missingId;
      }

      id = R.id.AccountSettingPageNicknameCheckButton;
      Button AccountSettingPageNicknameCheckButton = ViewBindings.findChildViewById(rootView, id);
      if (AccountSettingPageNicknameCheckButton == null) {
        break missingId;
      }

      id = R.id.AccountSettingPagePW;
      EditText AccountSettingPagePW = ViewBindings.findChildViewById(rootView, id);
      if (AccountSettingPagePW == null) {
        break missingId;
      }

      id = R.id.AccountSettingPagePWCheck;
      EditText AccountSettingPagePWCheck = ViewBindings.findChildViewById(rootView, id);
      if (AccountSettingPagePWCheck == null) {
        break missingId;
      }

      id = R.id.AccountSettingPageTitle;
      TextView AccountSettingPageTitle = ViewBindings.findChildViewById(rootView, id);
      if (AccountSettingPageTitle == null) {
        break missingId;
      }

      id = R.id.AccountSettingPageUndo;
      Button AccountSettingPageUndo = ViewBindings.findChildViewById(rootView, id);
      if (AccountSettingPageUndo == null) {
        break missingId;
      }

      id = R.id.accountSettingPageLogout;
      Button accountSettingPageLogout = ViewBindings.findChildViewById(rootView, id);
      if (accountSettingPageLogout == null) {
        break missingId;
      }

      id = R.id.accountSettingPageRmove;
      Button accountSettingPageRmove = ViewBindings.findChildViewById(rootView, id);
      if (accountSettingPageRmove == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.constraintLayout4;
      ConstraintLayout constraintLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout4 == null) {
        break missingId;
      }

      id = R.id.constraintLayout5;
      ConstraintLayout constraintLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout5 == null) {
        break missingId;
      }

      id = R.id.constraintLayout6;
      ConstraintLayout constraintLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout6 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivityAccountSettingPageBinding((ConstraintLayout) rootView,
          AccountSettingPageEmail, AccountSettingPageNickname,
          AccountSettingPageNicknameCheckButton, AccountSettingPagePW, AccountSettingPagePWCheck,
          AccountSettingPageTitle, AccountSettingPageUndo, accountSettingPageLogout,
          accountSettingPageRmove, constraintLayout2, constraintLayout3, constraintLayout4,
          constraintLayout5, constraintLayout6, imageView, relativeLayout, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
