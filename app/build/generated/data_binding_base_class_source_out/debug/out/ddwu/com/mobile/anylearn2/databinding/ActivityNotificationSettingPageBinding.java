// Generated by view binder compiler. Do not edit!
package ddwu.com.mobile.anylearn2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ddwu.com.mobile.anylearn2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationSettingPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView NotificationSettingPageContent;

  @NonNull
  public final SwitchCompat NotificationSettingPageNotiSwitch;

  @NonNull
  public final TextView NotificationSettingPageNotiText;

  @NonNull
  public final TextView NotificationSettingPageTitle;

  @NonNull
  public final Button NotificationSettingPageUndo;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout7;

  private ActivityNotificationSettingPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView NotificationSettingPageContent,
      @NonNull SwitchCompat NotificationSettingPageNotiSwitch,
      @NonNull TextView NotificationSettingPageNotiText,
      @NonNull TextView NotificationSettingPageTitle, @NonNull Button NotificationSettingPageUndo,
      @NonNull ConstraintLayout constraintLayout2, @NonNull ConstraintLayout constraintLayout7) {
    this.rootView = rootView;
    this.NotificationSettingPageContent = NotificationSettingPageContent;
    this.NotificationSettingPageNotiSwitch = NotificationSettingPageNotiSwitch;
    this.NotificationSettingPageNotiText = NotificationSettingPageNotiText;
    this.NotificationSettingPageTitle = NotificationSettingPageTitle;
    this.NotificationSettingPageUndo = NotificationSettingPageUndo;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout7 = constraintLayout7;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationSettingPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationSettingPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification_setting_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationSettingPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.NotificationSettingPageContent;
      TextView NotificationSettingPageContent = ViewBindings.findChildViewById(rootView, id);
      if (NotificationSettingPageContent == null) {
        break missingId;
      }

      id = R.id.NotificationSettingPageNotiSwitch;
      SwitchCompat NotificationSettingPageNotiSwitch = ViewBindings.findChildViewById(rootView, id);
      if (NotificationSettingPageNotiSwitch == null) {
        break missingId;
      }

      id = R.id.NotificationSettingPageNotiText;
      TextView NotificationSettingPageNotiText = ViewBindings.findChildViewById(rootView, id);
      if (NotificationSettingPageNotiText == null) {
        break missingId;
      }

      id = R.id.NotificationSettingPageTitle;
      TextView NotificationSettingPageTitle = ViewBindings.findChildViewById(rootView, id);
      if (NotificationSettingPageTitle == null) {
        break missingId;
      }

      id = R.id.NotificationSettingPageUndo;
      Button NotificationSettingPageUndo = ViewBindings.findChildViewById(rootView, id);
      if (NotificationSettingPageUndo == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout7;
      ConstraintLayout constraintLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout7 == null) {
        break missingId;
      }

      return new ActivityNotificationSettingPageBinding((ConstraintLayout) rootView,
          NotificationSettingPageContent, NotificationSettingPageNotiSwitch,
          NotificationSettingPageNotiText, NotificationSettingPageTitle,
          NotificationSettingPageUndo, constraintLayout2, constraintLayout7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
