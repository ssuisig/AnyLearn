// Generated by view binder compiler. Do not edit!
package ddwu.com.mobile.anylearn2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.SearchView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ddwu.com.mobile.anylearn2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyScriptListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox checkBoxDate;

  @NonNull
  public final CheckBox checkBoxSubject;

  @NonNull
  public final TextView januaryText;

  @NonNull
  public final ImageView scriptListHomeBtn;

  @NonNull
  public final TextView scriptListMainBar;

  @NonNull
  public final TextView scriptListMainBarOption;

  @NonNull
  public final SearchView scriptListSearch;

  private ActivityMyScriptListBinding(@NonNull ConstraintLayout rootView,
      @NonNull CheckBox checkBoxDate, @NonNull CheckBox checkBoxSubject,
      @NonNull TextView januaryText, @NonNull ImageView scriptListHomeBtn,
      @NonNull TextView scriptListMainBar, @NonNull TextView scriptListMainBarOption,
      @NonNull SearchView scriptListSearch) {
    this.rootView = rootView;
    this.checkBoxDate = checkBoxDate;
    this.checkBoxSubject = checkBoxSubject;
    this.januaryText = januaryText;
    this.scriptListHomeBtn = scriptListHomeBtn;
    this.scriptListMainBar = scriptListMainBar;
    this.scriptListMainBarOption = scriptListMainBarOption;
    this.scriptListSearch = scriptListSearch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyScriptListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyScriptListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_script_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyScriptListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkBox_date;
      CheckBox checkBoxDate = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxDate == null) {
        break missingId;
      }

      id = R.id.checkBox_subject;
      CheckBox checkBoxSubject = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSubject == null) {
        break missingId;
      }

      id = R.id.january_text;
      TextView januaryText = ViewBindings.findChildViewById(rootView, id);
      if (januaryText == null) {
        break missingId;
      }

      id = R.id.scriptList_home_btn;
      ImageView scriptListHomeBtn = ViewBindings.findChildViewById(rootView, id);
      if (scriptListHomeBtn == null) {
        break missingId;
      }

      id = R.id.scriptList_mainBar;
      TextView scriptListMainBar = ViewBindings.findChildViewById(rootView, id);
      if (scriptListMainBar == null) {
        break missingId;
      }

      id = R.id.scriptList_mainBar_option;
      TextView scriptListMainBarOption = ViewBindings.findChildViewById(rootView, id);
      if (scriptListMainBarOption == null) {
        break missingId;
      }

      id = R.id.scriptList_search;
      SearchView scriptListSearch = ViewBindings.findChildViewById(rootView, id);
      if (scriptListSearch == null) {
        break missingId;
      }

      return new ActivityMyScriptListBinding((ConstraintLayout) rootView, checkBoxDate,
          checkBoxSubject, januaryText, scriptListHomeBtn, scriptListMainBar,
          scriptListMainBarOption, scriptListSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
